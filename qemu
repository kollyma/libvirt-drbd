#!/bin/bash
#
# Copyright (C) 2014 Oliver Hitz <oliver@net-track.ch>
# Copyright (C) 2016 Marc Ponschab <marc@ponschab.de>
#
# This script is a libvirt hook to automatically promote/demote DRBD
# resources.
# 
# Place the "qemu" script in /etc/libvirt/hooks/ and it will
# automatically promote and demote DRBD resources configured in libvirt
# guests when the guests are started or shut down.
# 
# In order for the DRBD resources to be recognized as such, they need to
# be configured with the /dev/drbd/by-res/<name> path.
# 
# The script requires the xmllint command from the libxml package.
# 
# The latest version of the script is at
# https://github.com/ohitz/libvirt-drbd

# If qemu does't release the drbrd device immediately, make MAX_ATTEMPTS attemps after waiting SLEEP_BETWEEN_ATTEMPTS
MAX_ATTEMPTS=10;
SLEEP_BETWEEN_ATTEMPTS=1;

function cleanup() {
  if [ -n "$guest_cfg" ]; then
    rm -f $guest_cfg
  fi
}

function selectDrbdDevices() {
  x_dev=$(xmllint --xpath "/domain/devices/disk/source[starts-with(@dev, '/dev/drbd/by-res/')]/@dev" $1)
  x_file=$(xmllint --xpath "/domain/devices/disk/source[starts-with(@file, '/dev/drbd/by-res/')]/@file" $1)
  echo "$x_dev  $x_file"
}

function setRole() {
  role=$1;
  resourceName=$(echo $2 | sed -e 's|^dev="/dev/drbd/by-res/\(.*\)"|\1|' | sed -e 's|^file="/dev/drbd/by-res/\(.*\)"|\1|');
  for i in $(seq $MAX_ATTEMPTS); do
    #echo "attempt $i: drbdadm $role $resourceName" >>/var/log/libvirt/hook-qemu.log
    /sbin/drbdadm $role $resourceName && return;
    sleep $SLEEP_BETWEEN_ATTEMPTS;
  done
  echo "$MAX_ATTEMPTS attempts executing \"drbdadm $role $resourceName failed, giving up.\""  >&2
  exit 1
}

trap cleanup EXIT

if [ "$#" -ne 4 ]; then
  echo "$0: Illegal number of parameters." >&2
  exit 1
fi

guest_name=$1
task=$2

# Create temporary file to hold the configuration.
guest_cfg=`mktemp`

case "$task" in
prepare)
  # "qemu <guest> prepare", means that libvirt is preparing to start the guest.

  # Read XML configuration on stdin.
  cat - > $guest_cfg

  for dev in $(selectDrbdDevices $guest_cfg); do
    setRole primary $dev;
  done
  ;;
release)
  # "qemu <guest> release", means that the guest has been shutdown.

  # Read XML configuration on stdin.
  cat - > $guest_cfg

  for dev in $(selectDrbdDevices $guest_cfg); do
    setRole secondary $dev;
  done
  ;;
esac

exit 0

